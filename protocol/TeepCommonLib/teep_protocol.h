// Copyright (c) TEEP contributors
// SPDX-License-Identifier: MIT
#pragma once

// The values in this file are taken from
// https://datatracker.ietf.org/doc/draft-ietf-teep-protocol/

#define TEEP_CBOR_MEDIA_TYPE "application/teep+cbor"

typedef enum {
    TEEP_MESSAGE_QUERY_REQUEST = 1,
    TEEP_MESSAGE_QUERY_RESPONSE = 2,
    TEEP_MESSAGE_UPDATE = 3,
    TEEP_MESSAGE_SUCCESS = 5,
    TEEP_MESSAGE_ERROR = 6,
} teep_message_type_t;

typedef _Return_type_success_(return == TEEP_ERR_SUCCESS) enum {
    TEEP_ERR_SUCCESS = 0,
    TEEP_ERR_PERMANENT_ERROR = 1,
    TEEP_ERR_UNSUPPORTED_EXTENSION = 2,
    TEEP_ERR_UNSUPPORTED_FRESHNESS_MECHANISMS = 3,
    TEEP_ERR_UNSUPPORTED_MSG_VERSION = 4,
    TEEP_ERR_UNSUPPORTED_CIPHER_SUITES = 5,
    TEEP_ERR_BAD_CERTIFICATE = 6,
    TEEP_ERR_CERTIFICATE_EXPIRED = 9,
    TEEP_ERR_TEMPORARY_ERROR = 10,
    TEEP_ERR_MANIFEST_PROCESSING_FAILED = 17
} teep_error_code_t;

typedef enum {
    TEEP_ATTESTATION = 1,
    TEEP_TRUSTED_COMPONENTS = 2,
    TEEP_EXTENSIONS = 4,
    TEEP_SUIT_REPORTS = 8,
} teep_data_items_t;

typedef enum {
    TEEP_LABEL_SUPPORTED_CIPHER_SUITES = 1,
    TEEP_LABEL_CHALLENGE = 2,
    TEEP_LABEL_VERSIONS = 3,
    TEEP_LABEL_SELECTED_CIPHER_SUITE = 5,
    TEEP_LABEL_SELECTED_VERSION = 6,
    TEEP_LABEL_ATTESTATION_PAYLOAD = 7,
    TEEP_LABEL_TC_LIST = 8,
    TEEP_LABEL_EXT_LIST = 9,
    TEEP_LABEL_MANIFEST_LIST = 10,
    TEEP_LABEL_MSG = 11,
    TEEP_LABEL_ERR_MSG = 12,
    TEEP_LABEL_ATTESTATION_PAYLOAD_FORMAT = 13,
    TEEP_LABEL_REQUESTED_TC_LIST = 14,
    TEEP_LABEL_UNNEEDED_MANIFEST_LIST = 15,
    TEEP_LABEL_COMPONENT_ID = 16,
    TEEP_LABEL_TC_MANIFEST_SEQUENCE_NUMBER = 17,
    TEEP_LABEL_HAVE_BINARY = 18,
    TEEP_LABEL_SUIT_REPORTS = 19,
    TEEP_LABEL_TOKEN = 20,
    TEEP_LABEL_SUPPORTED_FRESHNESS_MECHANISMS = 21,
    TEEP_LABEL_ERR_CODE = 23,
} teep_label_t;

typedef enum {
    TEEP_FRESHNESS_MECHANISM_NONCE = 0,
    TEEP_FRESHNESS_MECHANISM_TIMESTAMP = 1,
    TEEP_FRESHNESS_MECHANISM_EPOCH_ID = 2,
} teep_freshness_mechanism_t;
